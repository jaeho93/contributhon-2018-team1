=======================================
reStructuredText Compared With MarkDown
=======================================
markdown과 비교하여 rst를 빠르게 익혀보자.
------------------------------------------
Python Language 자체 뿐만 아니라 많은 파이썬 오픈소스 라이브러리들이 Sphinx를 이용해 문서를 관리하는데,
오픈 스택 또한 마찬가지입니다. 이 Sphinx 라는 문서 작성 툴은 reStructuredText라는 문법을 사용합니다.
이 글에서는 기존의 MarkDown 문법에 친숙한 사용자들을 위해 빠르게 Markdown과 reStructuredText를 비교합니다.
rst의 더 자세한 정보와 오픈스택에서의 활용은 `Rst와 함께하는 Python 문서 작성 & OpenStack 문서 활용 사례 <https://www.slideshare.net/ianychoi/pycon-kr-2017-rst-python-openstack>`_ 를 참고합니다.

제목
====
    markdown
        # 하나가 큰 제목이고 갯수가 늘어날수록 작은 제목입니다.
        
        # ## ### #### ##### ###### 순으로 작아집니다. :
            
            # 제목입니다.
            
            ## 부제목1
            
            ### 부제목2
    
    rst
        제목 아래에 = 를 두면 섹션입니다. 필요에 따라 위아래에 =를 둘 수 있습니다. ::
        
            ====
            제목
            ====
            
        =의 갯수는 최소 제목이 되는 문장의 길이 이상이어야 합니다. 그리고 다음과 같은 하위 규칙이 있습니다. ::
        
            #, 윗줄과 함께, 부(parts)에 사용됩니다.
            *, 윗줄과 함께, 장(chapters)에 사용됩니다.
            =, 섹션에 사용됩니다.
            -, 하위 섹션에 사용됩니다.
            ^, 하위 섹션 아래의 하위 섹션에 사용됩니다.
            ", 문단에 사용됩니다.
            

강조
====

인용
====

코드
====

링크
====
